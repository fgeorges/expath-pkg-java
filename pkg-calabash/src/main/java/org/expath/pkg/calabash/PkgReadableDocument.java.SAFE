/****************************************************************************/
/*  File:       PkgReadableDocument.java                                    */
/*  Author:     F. Georges                                                  */
/*  Company:    H2O Consulting                                              */
/*  Date:       2009-10-20                                                  */
/*  Tags:                                                                   */
/*      Copyright (c) 2009 Florent Georges (see end of file.)               */
/* ------------------------------------------------------------------------ */


package org.expath.pkg.calabash;

import com.xmlcalabash.core.XProcConstants;
import com.xmlcalabash.core.XProcException;
import com.xmlcalabash.core.XProcRuntime;
import com.xmlcalabash.io.ReadableDocument;
import com.xmlcalabash.model.DocumentBinding;
import javax.xml.transform.Source;
import javax.xml.transform.TransformerException;
import javax.xml.transform.URIResolver;
import net.sf.saxon.s9api.DocumentBuilder;
import net.sf.saxon.s9api.QName;
import net.sf.saxon.s9api.SaxonApiException;

/**
 * ...
 *
 * Based on ReadableDocument (Calabash 0.9.15, SVN revision 456.)
 *
 * @author Florent Georges
 * @date   2009-10-20
 */
public class PkgReadableDocument
        extends ReadableDocument
{
    private final static QName cx_filemask = new QName("cx", XProcConstants.NS_CALABASH_EX,"filemask");

    public PkgReadableDocument(DocumentBinding binding, URIResolver resolver, XProcRuntime runtime)
    {
        super(runtime, binding.getNode(), binding.getHref(), binding.getNode().getBaseURI().toASCIIString(), binding.getExtensionAttribute(cx_filemask));
        myResolver = resolver;
    }

    protected void doRead()
    {
        Source src;
        try {
            src = myResolver.resolve(uri, null);
        }
        catch ( TransformerException ex ) {
            throw new XProcException("Error resolving '" + uri + "'", ex);
        }
        DocumentBuilder builder = runtime.getProcessor().newDocumentBuilder();
        builder.setLineNumbering(true);
        try {
            documents.add(builder.build(src));
        }
        catch ( SaxonApiException ex ) {
            String msg = "Error building '" + uri + "' (" + src.getSystemId() + ")";
            throw new XProcException(msg, ex);
        }
    }

    private URIResolver myResolver;
}


/* ------------------------------------------------------------------------ */
/*  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS COMMENT.               */
/*                                                                          */
/*  The contents of this file are subject to the Mozilla Public License     */
/*  Version 1.0 (the "License"); you may not use this file except in        */
/*  compliance with the License. You may obtain a copy of the License at    */
/*  http://www.mozilla.org/MPL/.                                            */
/*                                                                          */
/*  Software distributed under the License is distributed on an "AS IS"     */
/*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See    */
/*  the License for the specific language governing rights and limitations  */
/*  under the License.                                                      */
/*                                                                          */
/*  The Original Code is: all this file.                                    */
/*                                                                          */
/*  The Initial Developer of the Original Code is Florent Georges.          */
/*                                                                          */
/*  Contributor(s): none.                                                   */
/* ------------------------------------------------------------------------ */
